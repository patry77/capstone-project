name: Develop lint check

on:
  push:
    branches:
      - develop

jobs:
  terraform_loadbalancer:
    name: Terraform Load Balancer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create auto.tfvars
        run: |
          echo "image = \":8082/repository/spring-petclinic/petclinic-test\"" > ./variables.auto.tfvars
          echo "insecure_host = \"\"" >> ./variables.auto.tfvars
          echo "mysql_url = \"jdbc:mysql:///petclinic\"" >> ./variables.auto.tfvars
        working-directory: ./terraform/loadBalancer

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_CLOUD_TOKEN }}
          terraform_wrapper: false

      - name: Terraform Load Balancer Init
        run: terraform init
        working-directory: terraform/loadBalancer

      - name: Terraform Load Balancer Linting
        run: terraform validate
        working-directory: terraform/loadBalancer



      - name: Terraform Load Balancer Plan
        run: terraform plan -input=false
        working-directory: terraform/loadBalancer

  terraform_pipelinevm:
    name: Terraform Pipeline VM
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_CLOUD_TOKEN }}
          terraform_wrapper: false

      - name: Terraform Pipeline VM Init
        run: terraform init
        working-directory: terraform/pipelineVM

      - name: Terraform Pipeline VM Linting
        run: terraform validate
        working-directory: terraform/pipelineVM



      - name: Terraform Pipeline VM Plan
        run: terraform plan -input=false
        working-directory: terraform/pipelineVM
  ansible_checks:
    name: Ansible Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
    

      - name: Install Ansible
        run: pip install ansible
      
      - name: Install Ansible Lint
        run: pip install ansible-lint

      - name: Check Ansible playbooks syntax and linting
        run: |
          playbooks=("ansible/playbooks/configure-jenkins.yml" "ansible/playbooks/configure-nexus.yml" "ansible/playbooks/configure-vm.yml" "ansible/playbooks/unlock-jenkins.yml" "ansible/playbooks/install-jenkins.yml" "ansible/playbooks/install-nexus.yml")
          for playbook in "${playbooks[@]}"; do
            ansible-playbook --syntax-check $playbook
          done
