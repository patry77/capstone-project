---
- name: Configure Nexus
  hosts: all
  remote_user: "{{ lookup('env', 'REMOTE_USER') }}"
  become: yes
  tasks:

    - name: Set nexus password
      ansible.builtin.set_fact:
        nexus_password: "{{ lookup('env', 'NEXUS_PASSWORD') }}"

    - name: Wait for Nexus to start
      uri:
        url: "http://localhost:8081/service/rest/v1/status"
        method: GET
      register: nexus_status
      until: nexus_status.status == 200
      retries: 30
      delay: 10

    - name: Get password from docker container
      community.docker.docker_container_exec:
        container: nexus
        command: cat /nexus-data/admin.password
        detach: no
      register: exec_result
      ignore_errors: yes

    - name: Capture Admin Password
      set_fact:
        admin_password: "{{ exec_result.stdout }}"
      ignore_errors: yes

    - name: Change Nexus admin password
      uri:
        url: 'http://localhost:8081/service/rest/v1/security/users/admin/change-password'
        method: PUT
        user: admin
        password: "{{ admin_password }}"
        force_basic_auth: true
        headers:
          accept: 'application/json'
          Content-Type: 'text/plain'
        body: '{{ nexus_password }}'
        status_code: 204
      ignore_errors: yes

    - debug:
        var: result
    - name: Configure Docker Bearer Token Realm
      uri:
        url: "http://localhost:8081/service/rest/v1/security/realms/active"
        method: PUT
        user: admin
        password: "{{ nexus_password }}"
        force_basic_auth: true
        status_code: 204
        headers:
          Content-Type: "application/json"
        body: |
          [
            "NexusAuthenticatingRealm",
            "DockerToken"
          ]

    - name: Configure Docker Hosted Repository
      uri:
        url: http://localhost:8081/service/rest/v1/repositories/docker/hosted
        method: POST
        user: admin
        password: "{{ nexus_password }}"
        force_basic_auth: true
        body: |
          {
            "name": "spring-petclinic",
            "online": true,
            "docker": {
              "v1Enabled": false,
              "forceBasicAuth": false,
              "httpPort": 8082

            },
            "storage": {
              "blobStoreName": "default",
              "strict_content_validation": true,
              "writePolicy": "ALLOW",
              "strictContentTypeValidation": true
            }
          }
        status_code: 201
        headers:
          Content-Type: application/json
      ignore_errors: yes